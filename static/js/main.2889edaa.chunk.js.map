{"version":3,"sources":["util/node.js","util/max_heap.js","util/min_heap.js","actions/risk_level_idx_actions.js","reducers/entities_reducer.js","reducers/risk_levels_reducer.js","reducers/risk_level_idx_reducer.js","reducers/root_reducer.js","store/store.js","components/home/row_item.jsx","components/home/risk_level_selector.jsx","components/home/buttons.jsx","components/home/chart.jsx","components/home/home.jsx","util/rebalance.js","components/calculator/calculator.jsx","components/App.jsx","components/root.jsx","index.js"],"names":["module","exports","Node","val","idx","this","require","MaxHeap","array","Math","floor","i","j","parentIdx","getParent","swap","siftUp","leftIdx","getLeftChild","rightIdx","getRightChild","leftVal","Infinity","rightVal","swapIdx","siftDown","length","pop","max","node","push","MinHeap","min","SET_RISK_LEVEL_IDX","dispatchSRLIdx","dispatch","type","setRiskLevelIdx","entitiesReducer","combineReducers","riskLevels","oldState","action","Object","freeze","current","newState","assign","currentIdx","rootReducer","entities","middlewares","thunk","RowItem","risk","currIdx","highlighted","clickable","pointerEvents","riskKeys","keys","rowHeader","className","map","key","row","to","style","RiskLevelSelector","setCurrIdx","onChange","e","Number","target","value","selected","disabled","hidden","level","ContinueButton","color","ToggleButton","showChart","setShowChart","text","onClick","COLORS","Chart","data","formatData","d","res","k","name","width","height","cx","cy","innerRadius","outerRadius","label","fill","paddingAngle","dataKey","entry","index","verticalAlign","connect","state","setCurrentIdx","props","useState","useEffect","buildMinMaxHeap","minHeap","maxHeap","forEach","num","insert","round","EPSILON","INITIAL_VALUES","riskLevelIdx","inputSum","setInputSum","inputs","setInputs","targetValues","setTargetValues","difference","setDifference","suggestions","setSuggestions","options","values","reduce","a","c","arr1","arr2","findDiff","diff","heaps","deleteMin","deleteMax","fromCol","toCol","displayMax","displayMin","abs","rebalance","calcTargetAmount","field","targetPercentage","option","displayDiff","displayDiffColor","handleInputChange","id","str","App","exact","path","component","Home","Calculator","Root","store","basename","process","document","addEventListener","root","getElementById","preloadedState","createStore","applyMiddleware","configureStore","RiskLevels","window","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.2889edaa.chunk.js","sourcesContent":["class Node {\n    constructor(val, idx=null) {\n        this.val = val\n        this.idx = idx\n    }\n}\n\nmodule.exports = { Node }","const { Node } = require('./node');\n\nclass MaxHeap {\n    constructor() {\n        this.array = [null];\n    }\n\n    getParent(idx) {\n        return Math.floor(idx / 2);\n    };\n\n    getLeftChild(idx) {\n        return idx * 2;\n    };\n\n    getRightChild(idx) {\n        return (idx * 2) + 1;\n    }\n\n    swap(array, i, j) {\n        [array[i], array[j]] = [array[j], array[i]]\n    }\n\n    siftUp(idx) {\n        if (idx === 1) return;\n\n        let parentIdx = this.getParent(idx);\n        if (this.array[idx].val > this.array[parentIdx].val) {\n            this.swap(this.array, idx, parentIdx);\n            this.siftUp(parentIdx);\n        }\n    }\n\n    siftDown(idx) {\n        let leftIdx = this.getLeftChild(idx);\n        let rightIdx = this.getRightChild(idx);\n\n        let leftVal = this.array[leftIdx] ? this.array[leftIdx].val : -Infinity;\n        let rightVal = this.array[rightIdx] ? this.array[rightIdx].val : -Infinity;\n\n        if (this.array[idx].val > leftVal && this.array[idx].val > rightVal) return;\n\n        let swapIdx = leftVal < rightVal ? rightIdx : leftIdx;\n\n        this.swap(this.array, idx, swapIdx);\n        this.siftDown(swapIdx);\n\n    }\n\n    deleteMax() {\n        if (this.array.length === 2) return this.array.pop();\n        if (this.array.length <= 1) return { val: null, idx: null };\n\n        let max = this.array[1];\n        this.array[1] = this.array.pop();\n        this.siftDown(1);\n\n        return max;\n    }\n\n\n\n\n    insert(val, idx) {\n        const node = new Node(val, idx)\n        this.array.push(node);\n        this.siftUp(this.array.length - 1)\n    };\n\n}\n\nmodule.exports = { MaxHeap }\n","const { Node } = require('./node');\n\nclass MinHeap {\n    constructor() {\n        this.array = [null];\n    }\n\n    getParent(idx) {\n        return Math.floor(idx / 2);\n    }\n\n    getLeftChild(idx) {\n        return idx * 2;\n    }\n\n    getRightChild(idx) {\n        return (idx * 2) + 1;\n    }\n\n    swap(array, i, j) {\n        [array[i], array[j]] = [array[j], array[i]]\n    }\n\n    siftUp(idx) {\n        if (idx === 1) return;\n\n        let parentIdx = this.getParent(idx);\n        if (this.array[idx].val < this.array[parentIdx].val) {\n            this.swap(this.array, idx, parentIdx);\n            this.siftUp(parentIdx)\n        }\n    }\n\n    siftDown(idx) {\n        let leftIdx = this.getLeftChild(idx);\n        let rightIdx = this.getRightChild(idx);\n\n        let leftVal = this.array[leftIdx] ? this.array[leftIdx].val : Infinity;\n        let rightVal = this.array[rightIdx] ? this.array[rightIdx].val : Infinity;\n\n        if (this.array[idx].val < leftVal && this.array[idx].val < rightVal) return;\n\n        let swapIdx = leftVal > rightVal ? rightIdx : leftIdx;\n\n        this.swap(this.array, idx, swapIdx);\n        this.siftDown(swapIdx);\n    }\n\n    deleteMin() {\n        if (this.array.length === 2) return this.array.pop();\n        if (this.array.length <= 1) return { val: null, idx: null };\n\n        let min = this.array[1];\n        this.array[1] = this.array.pop();\n        this.siftDown(1);\n\n        return min;\n    }\n\n    insert(val, idx) {\n        const node = new Node(val, idx)\n        this.array.push(node);\n        this.siftUp(this.array.length - 1)\n    }\n}\n\nmodule.exports = { MinHeap }","export const SET_RISK_LEVEL_IDX = 'SET_RISK_LEVEL_IDX';\n\nconst setRiskLevelIdx = (idx) => {\n    return {\n        type: SET_RISK_LEVEL_IDX,\n        idx\n    }\n}\n\nexport const dispatchSRLIdx = (idx) => dispatch => {\n    dispatch(setRiskLevelIdx(idx))\n}","import { combineReducers } from 'redux';\nimport { riskLevelsReducer } from './risk_levels_reducer';\nimport { riskLevelIdxReducer } from './risk_level_idx_reducer';\n\n\nexport const entitiesReducer = combineReducers({\n    riskLevels: riskLevelsReducer,\n    current: riskLevelIdxReducer\n});","\n\nexport const riskLevelsReducer = (oldState={}, action) => {\n    Object.freeze(oldState);\n\n    switch (action.type) {\n        default:\n            return oldState;\n    }\n}","import { SET_RISK_LEVEL_IDX } from '../actions/risk_level_idx_actions';\n\n\nexport const riskLevelIdxReducer = (oldState = {}, action) => {\n    Object.freeze(oldState);\n\n    switch (action.type) {\n        case SET_RISK_LEVEL_IDX:\n            let newState = Object.assign({}, oldState, {currentIdx: action.idx})\n            return newState;\n        default:\n            return oldState;\n    }\n}","import { combineReducers } from 'redux';\nimport { entitiesReducer } from './entities_reducer';\n\nexport const rootReducer = combineReducers({\n    entities: entitiesReducer,\n})","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/root_reducer';\n\nconst middlewares = [thunk];\n\nexport const configureStore = (preloadedState = {}) => \n    createStore(rootReducer, preloadedState, applyMiddleware(...middlewares));\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const RowItem = ({ risk, idx, currIdx }) => {\n    const highlighted = currIdx === idx ? \"risk selected\" : 'risk'\n    const clickable = currIdx === idx ? null : { pointerEvents: \"none\" }\n    const riskKeys = Object.keys(risk);\n\n    const rowHeader = <div className='risk-header'>\n                        <li>Risk Level</li>\n                        {riskKeys.map(key => (\n                            <li key={key}>{key}</li>\n                        ))}\n                    </div>\n\n    const row = <Link to='/calculator' style={clickable}>\n                    <div key={idx} className={highlighted}>                 \n                            <li>{idx}</li>\n                            {riskKeys.map(key => (\n                                <li key={key}>{risk[key] * 100}%</li>\n                            ))}\n                    </div>\n                </Link>               \n\n    return idx === 0 ? rowHeader : row   \n}\n","import React from 'react';\n\nexport const RiskLevelSelector = ( {setCurrIdx} ) => {\n\n    return (\n        <div>\n            <select onChange={(e) => setCurrIdx(Number(e.target.value))}>\n                <option value=\"none\" \n                        selected disabled hidden >\n                        Select Risk Level\n                </option>\n                {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(level => (\n                    <option value={level} key={level}>{level}</option>\n                ))}\n            </select>\n        </div>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const ContinueButton = ({ currIdx }) => {\n    const style = currIdx === 0 ? { pointerEvents: \"none\", color: 'grey'} : null\n    return <Link to='/calculator'\n                 className='button-container' \n                 style={style}>\n                 Continue\n            </Link>\n}\n\nexport const ToggleButton = ({showChart, setShowChart}) => {\n    const text = showChart ? \"Table\" : \"Chart\"\n    return (\n        <li className='button-container'\n            onClick={() => setShowChart(!showChart)}\n        >{text}</li>\n    )\n}","import React from 'react';\nimport {\n    PieChart, Pie, Cell, Legend\n} from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#B28DFF'];\n\n\nexport const Chart = ({data}) => {\n\n    const formatData = (d) => {\n        let res = [];\n\n        for(let k in d) {\n            res.push({name: k, value: d[k]})\n        } \n        return res;\n    }\n  \n    return (\n        <PieChart width={800} height={500} >\n            <Pie\n                data={formatData(data)}\n                cx={370}\n                cy={250}\n                innerRadius={50}\n                outerRadius={200}\n                label= \"name\"\n                fill=\"#8884d8\"\n                paddingAngle={0}\n                dataKey=\"value\"\n            >\n                {\n                    formatData(data).map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                }\n            </Pie>\n            <Legend verticalAlign=\"top\" height={10}></Legend>\n        </PieChart>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { dispatchSRLIdx } from '../../actions/risk_level_idx_actions';\nimport { RowItem } from './row_item';\nimport { RiskLevelSelector } from './risk_level_selector';\nimport { ContinueButton, ToggleButton } from './buttons';\nimport { Chart } from './chart';\n\nimport './home.css';\n\n\n\nconst Home = (props) => {\n\n    const [currIdx, setCurrIdx] = useState(props.currentIdx);\n    const [showChart, setShowChart] = useState(false)\n\n    useEffect(() => {\n        props.setCurrentIdx(currIdx)\n    }, [currIdx])\n\n    return (\n        <div className='home-container'>\n            <h1>This is the Home Page</h1>\n            <div className='select-container'>\n                <RiskLevelSelector setCurrIdx={setCurrIdx}/>\n                <ContinueButton currIdx={currIdx}/>\n                <ToggleButton showChart={showChart}\n                              setShowChart={setShowChart}/>\n            </div>\n            <div>\n                {\n                    showChart ? <Chart data={props.riskLevels[currIdx]}/> :\n                    <ul className='risk-container'>\n                        {props.riskLevels.map((risk, idx) => {\n                            return <RowItem idx={idx} \n                                            risk={risk} \n                                            currIdx={currIdx}/>\n                        } )}\n                    </ul>\n                }\n            </div>\n            \n        </div>\n    )\n}\n\n/**\n * Container for Home component\n */\n\nconst mSTP = ( state ) => {\n    return {\n        riskLevels: state.entities.riskLevels,\n        currentIdx: state.entities.current.currentIdx\n    }\n};\n\nconst mDTP = ( dispatch ) => {\n    return {\n        setCurrentIdx: (idx) => dispatch(dispatchSRLIdx(idx))\n    }\n} \n\nexport default connect(mSTP, mDTP)(Home)","const { MaxHeap } = require('./max_heap');\nconst { MinHeap } = require('./min_heap');\n\nexport const rebalance = (diff, keys) => {\n    let heaps = buildMinMaxHeap(diff);\n    let minHeap = heaps[0];\n    let maxHeap = heaps[1];\n    let res = [];\n\n    while (minHeap.array.length > 1 && maxHeap.array.length > 1) {\n        let min = minHeap.deleteMin();\n        let max = maxHeap.deleteMax();\n\n        const fromCol = keys[min.idx]\n        const toCol = keys[max.idx]\n\n        let d = min.val + max.val;\n\n        if (d === 0) {\n            const displayMax = round(max.val)\n            res.push(`Transfer $${displayMax} from ${fromCol} to ${toCol}`)\n        } else if (d > 0) {\n            const displayMin = round(Math.abs(min.val))\n            res.push(`Transfer $${displayMin} from ${fromCol} to ${toCol}`)\n            maxHeap.insert(d, max.idx)\n        } else {\n            const displayMax = round(Math.abs(max.val))\n            res.push(`Transfer $${displayMax} from ${fromCol} to ${toCol}`)\n            minHeap.insert(d, min.idx)\n        }\n    }\n\n\n    return res;\n\n}\n\nconst buildMinMaxHeap = (array) => {\n    let minHeap = new MinHeap();\n    let maxHeap = new MaxHeap();\n\n    array.forEach((num, idx) => {\n        if (num > 0) {\n            maxHeap.insert(num, idx)\n        } else if (num < 0) {\n            minHeap.insert(num, idx)\n        }\n    })\n\n    return [minHeap, maxHeap]\n}\n\nexport const findDiff = (arr1, arr2) => {\n    let res = [];\n\n    for (let i = 0; i < arr1.length; i++) {\n        res[i] = arr1[i] - arr2[i];\n    }\n\n    return res;\n}\n\nexport const round = (num) => {\n    return Math.round((num + Number.EPSILON) * 100) / 100\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { rebalance, round, findDiff } from '../../util/rebalance'; \nimport './calculator.css'\n\nconst INITIAL_VALUES = { 'Bonds': 0, 'Large Cap': 0, 'Mid Cap': 0, 'Foreign': 0, 'Small Cap': 0 };\n\nconst Calculator = (props) => {\n    const [inputSum, setInputSum] = useState(0);\n    const [inputs, setInputs] = useState(INITIAL_VALUES);\n    const [targetValues, setTargetValues] = useState(INITIAL_VALUES);\n    const [difference, setDifference ] = useState([]);\n    const [suggestions, setSuggestions] = useState([]);\n    const options = Object.keys(props.data)\n\n    useEffect(() => {\n        setInputSum(Object.values(inputs).reduce((a,c) => a + c, 0))\n    }, [inputs])\n\n    useEffect(() => {\n        setDifference(findDiff(Object.values(targetValues), Object.values(inputs)))\n    },[targetValues])\n\n    useEffect(() => {\n        setSuggestions(rebalance(difference, options))\n    }, [difference])\n\n    const handleInputChange = (e, option) => {\n        setInputs({...inputs, [option]: Number(e.target.value)})\n    }\n\n    const handleSetTargetAmount = () => {\n        setTargetValues(\n            {\n                'Bonds': calcTargetAmount('Bonds', props.data),\n                'Large Cap': calcTargetAmount('Large Cap', props.data),\n                'Mid Cap': calcTargetAmount('Mid Cap', props.data),\n                'Foreign': calcTargetAmount('Foreign', props.data),\n                'Small Cap': calcTargetAmount('Small Cap', props.data)\n            }\n        )\n    }\n\n    const calcTargetAmount = (field, targetPercentage) => {\n        return round(inputSum * targetPercentage[field])\n    }\n\n    return (\n        <div>\n            <h1>Risk Level: {props.riskLevelIdx}</h1>\n            <div className='header'>\n                {options.map(option => {\n                    return <li>{option}: {props.data[option] * 100}%</li>\n                })}\n            </div>\n\n            <div className='input-container'>\n                <div className='input'>\n                    <li>Option</li>\n                    <li>Your Input</li>\n                    <li>Difference</li>\n                    <li>New Amount</li>\n                </div>\n                {options.map((option, idx) => {\n                    const displayDiff = (difference[idx] > 0) ? `+${difference[idx]}` : difference[idx]\n                    const displayDiffColor = difference[idx] !== 0 ? difference[idx] > 0 ? 'red' : 'green' : ''; \n                    return(\n                        <div key={idx} className='input'>\n                            <li>{option}:</li>\n                            <li><input type=\"number\" onChange={(e) => handleInputChange(e, option)} /></li>\n                            <li id={displayDiffColor}>{displayDiff}</li>\n                            <li>{targetValues[option]}</li>\n                        </div>\n                    )\n                })}\n            </div>\n\n            <button onClick={handleSetTargetAmount}>Rebalance</button>\n\n            <div>\n                {suggestions.map(str => {\n                    return <li>{str}</li>\n                })}\n            </div>\n        </div>\n    )\n}\n\n/**\n * Container for Calculator component\n */\n\nconst mSTP = (state) => {\n    const currentIdx = state.entities.current.currentIdx\n    return {\n        data: state.entities.riskLevels[currentIdx],\n        riskLevelIdx: currentIdx\n    }\n} \n\nconst mDTP = (dispatch) => {\n    return {}\n}\n\nexport default connect(mSTP, mDTP)(Calculator)\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './home/home';\nimport Calculator from './calculator/calculator';\nimport './App.css';\nexport const App = () => {\n  return (\n    <div>\n      <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route exact path='/calculator' component={Calculator}/>\n      </Switch>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { App }from './App';\n\nexport const Root = ({store}) => {\n   return (\n        <Provider store={store}>\n           <HashRouter basename={process.env.PUBLIC_URL}>\n                <App/>\n            </HashRouter>\n        </Provider>\n    ) \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from './store/store';\nimport { Root } from './components/root';\nimport RiskLevels from './risk_levels.json';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const root = document.getElementById('root');\n  const preloadedState = {\n    entities: {\n      riskLevels: RiskLevels,\n      current: {currentIdx: 0}\n    }\n  }\n  const store = configureStore(preloadedState);\n\n  //Window Testing\n\n  window.dispatch = store.dispatch\n  window.getState = store.getState\n\n  ReactDOM.render(<Root store={store}/>, root)\n})\n"],"sourceRoot":""}